오브젝트와 배열이 어떻게 작동하는지
왜 배열앞에 데이터를 추가하는게 안좋은지

객체 :

빠른접근 빠른제거에 좋다
정렬되어있지는 않지만 다른건 매우 빠름
빠르다고 했을때 입력 제거 접근하는 시간이 상수 시간이다.
Insertion O(1)
Removal O(1)
Searching O(N)
Access O(1)

입력제거접근 다 상수시간

Object.keys O(N)
Object.values O(N)
Object.entries O(N)
hasOwnProperty O(1)


배열 : 
정렬이 필요할 때

insertion : It depends
Removal : It depends
Searching : O(N)
Access : O(1)

배열이 얼마나 긴지는 중요하지 않다.
접근은 상수시간

배열의 끝에 값을 추가하는 경우는 O(1)
하지만 배열의 앞에 추가하는 경우에는 각 요소들의 인덱스값도 바꿔줘야 하기 때문에 O(N)이 된다.
제거하는 경우도 마찬가지이다.
=> 배열앞에 추가하고 제거하는것은 최대한 피해야 한다.

비어있는 배열을 제외하고
push pop 이 shift unshift 보다 속도가 더 빠르다.

push : O(1)
pop : O(1)
shift : O(N)
unshift : O(N)
concat : O(N)
slice : O(N)
splice : O(N)
sort - O(NlogN)
forEach/map/filter/reduce/etc  O(N)


객체와 배열의 차이점
객체는 거의 모든것을 더 빠르게 하지만 정렬되어 있지 않고
배열은 정렬되어있지만 끝에 추가하고 제거하는 작업이
시작에 추가하고 제거하는 작업보다 훨씬 빠르다.



