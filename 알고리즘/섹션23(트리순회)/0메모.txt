트리 순회
1. 너비우선(Breadth-first Search[BFS])
2. 깊이우선(Depth-first Search[DFS])

너비 우선 : 트리를 가로질러서 순회한다.
ex) 루트 -> 루트의 자식들 -> 루트의 자식들의 자식들
깊이 우선 : 트리의 끝까지 갔다가 다시 올라오면서 순회


너비 우선 : 아래로 내려가기전에 같은 레벨에 있는 모든 노드들을 거쳐가는것
큐를 사용한다.

깊이 우선 : 형제노드로 넘어가기전에 수직으로 트리의 끝까지 내려간다.
1. 전위 탐색 : 왼쪽을 모두 순회한다음 오른쪽 순회
2. 후위 탐색 : 루트가 가장 마지막에 순회한다. -> 거꾸로 순회한다
3. 중위 탐색 : 먼저 왼쪽 전체를 순회하고 노드를 방문하고 그다음 오른쪽 순회

너비우선과 깊이우선은 언제 사용해야 하는지
시간복잡도는 둘다 같지만 트리에 따라 공간복잡도가 다르다. 
완전히 펼쳐져서 넓게 펴진 상태로 아래까지 뻗어나가는 트리를 작업할때 너비 우선 탐색을 사용한다면
모든 노드를 저장하기위해 큐를 사용한다.
깊이보다 너비가 넓은 트리의 경우에는 깊이 우선 탐색이 더 적은 공간을 점유한다.
깊이가 매우 길다면 너비 우선이 더 낫다.

전위 후위 중위 는 언제 사용해야 하나
이진트리를 순회하는경우 전위탐색을 하면 오름차순으로 정리된다.
트리를 복사하거나 평탄화해서 저장하는 경우 나중에 연쇄구조로 다시 만들어 낼때 전위탐색이 도움이 된다.
전위 : 루트를 바로 알수 있다.

트리는 비선형 데이터 구조다.
루트 하나와 많은 자식 노드들로 구성되어 있다.
이진트리는 아무런 종류의 값을 가질수 있지만 각 노드는 최대 두개의 자식을 가질수 있는 특별한 경우다.
이진탐색트리는 일종의 순서를 가지는 정렬된 트리다.
그래서 이진 탐색트리는 비교가 가능한 데이터 종류에만 사용할수 있다.
